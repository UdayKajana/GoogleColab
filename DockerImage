by# Use official Java image as base
FROM openjdk:11-slim

# Install Python and required tools
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Google Cloud SDK for GCS access
RUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-latest-linux-x86_64.tar.gz \
    && tar xf google-cloud-sdk-latest-linux-x86_64.tar.gz \
    && ./google-cloud-sdk/install.sh --quiet \
    && rm google-cloud-sdk-latest-linux-x86_64.tar.gz

# Add Google Cloud SDK to PATH
ENV PATH $PATH:/google-cloud-sdk/bin

# Create working directory
WORKDIR /app

# Create startup script
RUN echo '#!/bin/bash\n\
\n\
# Download JAR from GCS\n\
gsutil cp $JAR_GCS_PATH /app/service.jar\n\
\n\
# Download Python script from GCS\n\
gsutil cp $PYTHON_SCRIPT_GCS_PATH /app/script.py\n\
\n\
# Start Java service\n\
java -jar /app/service.jar &\n\
\n\
# Wait for service to be ready (adjust sleep time based on your service startup time)\n\
sleep 10\n\
\n\
# Run Python script\n\
python3 /app/script.py\n\
' > /app/startup.sh

# Make startup script executable
RUN chmod +x /app/startup.sh

# Set environment variables (these will be overridden at runtime)
ENV JAR_GCS_PATH="gs://your-bucket/your-service.jar"
ENV PYTHON_SCRIPT_GCS_PATH="gs://your-bucket/your-script.py"

# Set startup script as entrypoint
ENTRYPOINT ["/app/startup.sh"]





# Use an official Java 11 base image
FROM openjdk:11-jdk-slim

# Install Python 3.8 and pip
RUN apt-get update && \
    apt-get install -y python3.8 python3-pip && \
    ln -s /usr/bin/python3.8 /usr/bin/python && \
    python --version && pip --version

# Set the working directory
WORKDIR /app

# Copy local files to the container (if needed for a project)
COPY . /app

# Define the entrypoint (optional, for running Python or Java scripts by default)
CMD ["bash"]
