
{"severity":"INFO","time":"2024/12/30 05:31:02.698741","line":"python_template_launcher.go:40","message":"Started template launcher."}
{"severity":"INFO","time":"2024/12/30 05:31:02.745242","line":"python_template_launcher.go:44","message":"Initialize Python template."}
{"severity":"INFO","time":"2024/12/30 05:31:02.745267","line":"python_template.go:98","message":"Falling back to using template-container args from metadata: template-container-args"}
{"severity":"INFO","time":"2024/12/30 05:31:02.747944","line":"python_template.go:108","message":"Validating template-container-args: {\"additionalBoolParameters\":[\"no_use_public_ips\"],\"consoleLogsLocation\":\"gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/console_logs\",\"environment\":{\"network\":\"shared-np-east\",\"region\":\"us-east4\",\"serviceAccountEmail\":\"sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com\",\"stagingLocation\":\"gs://dataflow-staging-us-east4-206482042907/staging\",\"subnetwork\":\"https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2\",\"tempLocation\":\"gs://vznet-test/wireline_churn_test/tmp/\"},\"jobId\":\"2024-12-29_21_29_01-14097703466443645553\",\"jobName\":\"bigquery-pipeline-tt\",\"jobObjectLocation\":\"gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/job_object\",\"operationResultLocation\":\"gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/operation_result\",\"parameters\":{\"dataflow_kms_key\":\"projects/vz-it-np-d0sv-vsadkms-0/locations/us-east4/keyRings/vz-it-np-kr-aid/cryptoKeys/vz-it-np-kms-gudv\",\"gcs_folder_path\":\"gs://vznet-test/wireline_churn_test/tmp/\",\"machine_type\":\"n2-standard-2\",\"max_num_workers\":\"2\",\"network\":\"shared-np-east\",\"num_workers\":\"2\",\"query\":\"SELECT * FROM vz-it-np-gudv-dev-vzntdo-0.vzn_nsdl_common_core_tbls.echo_ticket_opened_proc_v0 LIMIT 10\",\"service-account-email\":\"sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com\",\"service_account_email\":\"sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com\",\"staging_location\":\"gs://dataflow-staging-us-east4-206482042907/staging\",\"subnetwork\":\"https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2\",\"temp_location\":\"gs://vznet-test/wireline_churn_test/tmp/\"},\"projectId\":\"vz-it-np-gudv-dev-vzntdo-0\"}"}
{"severity":"INFO","time":"2024/12/30 05:31:02.749091","line":"python_template.go:117","message":"Extracting operation result location."}
{"severity":"INFO","time":"2024/12/30 05:31:02.749125","line":"python_template.go:125","message":"Operation result location: gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/operation_result"}
{"severity":"INFO","time":"2024/12/30 05:31:02.749145","line":"python_template.go:128","message":"Extracting console log location."}
{"severity":"INFO","time":"2024/12/30 05:31:02.749183","line":"python_template.go:136","message":"Console logs location: gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/console_logs"}
{"severity":"INFO","time":"2024/12/30 05:31:02.749210","line":"python_template.go:139","message":"Extracting Python command specs."}
{"severity":"INFO","time":"2024/12/30 05:31:02.749719","line":"python_template.go:148","message":"Generating launch args."}
{"severity":"INFO","time":"2024/12/30 05:31:02.749917","line":"python_args.go:236","message":"Overriding network with value: shared-np-east (previous value: shared-np-east)"}
{"severity":"INFO","time":"2024/12/30 05:31:02.749972","line":"python_args.go:236","message":"Overriding temp_location with value: gs://vznet-test/wireline_churn_test/tmp/ (previous value: gs://vznet-test/wireline_churn_test/tmp/)"}
{"severity":"INFO","time":"2024/12/30 05:31:02.750014","line":"python_args.go:236","message":"Overriding subnetwork with value: https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2 (previous value: https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2)"}
{"severity":"INFO","time":"2024/12/30 05:31:02.750058","line":"python_args.go:236","message":"Overriding staging_location with value: gs://dataflow-staging-us-east4-206482042907/staging (previous value: gs://dataflow-staging-us-east4-206482042907/staging)"}
{"severity":"INFO","time":"2024/12/30 05:31:02.750084","line":"python_args.go:236","message":"Overriding service_account_email with value: sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com (previous value: sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com)"}
{"severity":"INFO","time":"2024/12/30 05:31:02.750146","line":"launch.go:50","message":"Validating ExpectedFeatures."}
{"severity":"INFO","time":"2024/12/30 05:31:02.750173","line":"launch.go:75","message":"Launching Python template."}
{"severity":"INFO","time":"2024/12/30 05:31:02.750209","line":"python_template.go:64","message":"Using launch args: [/template/pipeline.py --requirements_file=/template/requirements.txt --gcs_folder_path=gs://vznet-test/wireline_churn_test/tmp/ --service-account-email=sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com --template_location=gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/job_object --staging_location=gs://dataflow-staging-us-east4-206482042907/staging --region=us-east4 --service_account_email=sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com --dataflow_kms_key=projects/vz-it-np-d0sv-vsadkms-0/locations/us-east4/keyRings/vz-it-np-kr-aid/cryptoKeys/vz-it-np-kms-gudv --machine_type=n2-standard-2 --query=SELECT * FROM vz-it-np-gudv-dev-vzntdo-0.vzn_nsdl_common_core_tbls.echo_ticket_opened_proc_v0 LIMIT 10 --network=shared-np-east --subnetwork=https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2 --num_workers=2 --max_num_workers=2 --runner=DataflowRunner --project=vz-it-np-gudv-dev-vzntdo-0 --job_name=bigquery-pipeline-tt --temp_location=gs://vznet-test/wireline_churn_test/tmp/ --no_use_public_ips]"}
{"severity":"INFO","time":"2024/12/30 05:31:02.750269","line":"exec.go:38","message":"Executing: python /template/pipeline.py --requirements_file=/template/requirements.txt --gcs_folder_path=gs://vznet-test/wireline_churn_test/tmp/ --service-account-email=sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com --template_location=gs://dataflow-staging-us-east4-206482042907/staging/template_launches/2024-12-29_21_29_01-14097703466443645553/job_object --staging_location=gs://dataflow-staging-us-east4-206482042907/staging --region=us-east4 --service_account_email=sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com --dataflow_kms_key=projects/vz-it-np-d0sv-vsadkms-0/locations/us-east4/keyRings/vz-it-np-kr-aid/cryptoKeys/vz-it-np-kms-gudv --machine_type=n2-standard-2 --query=SELECT * FROM vz-it-np-gudv-dev-vzntdo-0.vzn_nsdl_common_core_tbls.echo_ticket_opened_proc_v0 LIMIT 10 --network=shared-np-east --subnetwork=https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2 --num_workers=2 --max_num_workers=2 --runner=DataflowRunner --project=vz-it-np-gudv-dev-vzntdo-0 --job_name=bigquery-pipeline-tt --temp_location=gs://vznet-test/wireline_churn_test/tmp/ --no_use_public_ips"}
{"severity":"INFO","time":"2024/12/30 05:31:07.731140","line":"launch.go:88","message":"Template launch successful."}



Changing service account during launch is not allowed. Please specify the service account in the `parameters` section while making the API call. Service account specified through the API: sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com, actual service account: .

import apache_beam as beam
from apache_beam.options.pipeline_options import PipelineOptions
from apache_beam.io.gcp.pubsub import ReadFromPubSub
from apache_beam.options.pipeline_options import StandardOptions

import argparse
import logging
logging.getLogger().setLevel(logging.ERROR)
class TemplateOptions(PipelineOptions):
    @classmethod
    def _add_argparse_args(cls, parser):
        parser.add_value_provider_argument('--params', type=str)
parser = argparse.ArgumentParser()
parser.add_argument('--project', dest='project', required=True, help='GCP Project ID')
parser.add_argument('--runner', dest='runner', required=False, default="DataflowRunner", help='Pipeline runner')
parser.add_argument('--region', dest='region', required=False, default="us-east4", help='GCP project region')
parser.add_argument('--staging_location', dest='staging_location', required=True, help='Staging GCS bucket path')
parser.add_argument('--temp_location', dest='temp_location', required=True, help='Temp GCS bucket path')
parser.add_argument('--template_location', dest='template_location', required=True,help='GCS bucket path to save template')
# parser.add_argument('--input_project', dest='input_project', required=True, help='Input Subscription')
# parser.add_argument('--input_dataset', dest='input_dataset', required=True, help='Input Subscription')
# parser.add_argument('--input_table', dest='input_table', required=True, help='Input Subscription')
parser.add_argument('--query', dest='query', required=True, help='Input Subscription')
parser.add_argument('--gcs_folder_path', dest='gcs_folder_path', required=True, help='Input Subscription')
known_args,beam_args = parser.parse_known_args()

options = {
    'project': known_args.project,
    'runner': known_args.runner,
    'region': known_args.region,
    'staging_location': known_args.staging_location,
    'temp_location': known_args.temp_location,
    'template_location': known_args.template_location
}
pipeline_options = PipelineOptions.from_dictionary(options)
p = beam.Pipeline(options=pipeline_options)
data = p | 'ReadFromBigQuery' >> beam.io.ReadFromBigQuery(query=known_args.query, use_standard_sql=True)
csv_data = data | 'ConvertToCSV' >> beam.Map(lambda row: ','.join(str(x) for x in row.values()))
print_data = csv_data | "PrintData" >> beam.Map(lambda element : logging.log(logging.INFO, str(element)))
csv_data | 'WriteToGCS' >> beam.io.WriteToText(f'{known_args.gcs_folder_path}/output.csv', file_name_suffix='.csv', header="ont_activation_date, data_circuit_id, circuit_id, video_circuit_id, service_type, address_id, vision_account_id, vision_customer_id, address_type, line_of_business")
# Spanner configuration.
# data | "WriteToSpanner" >> beam.io.WriteToSpanner(
#     instance_id=known_args.spanner_instance_id,
#     database_id=known_args.spanner_database_id,
#     table_id=known_args.spanner_table_id,
# )
p.run()
# Build the Docker image (unchanged)
gcloud builds submit --tag us-east4-docker.pkg.dev/vz-it-np-gudv-dev-vzntdo-0/vznet/pipeline_env:V1 .

# Build the Flex Template (unchanged)
gcloud dataflow flex-template build gs://vznet-test/wireline_churn_test/src/template.json \
    --image us-east4-docker.pkg.dev/vz-it-np-gudv-dev-vzntdo-0/vznet/pipeline_env:V1 \
    --sdk-language "PYTHON" \
    --metadata-file metadata.json

# Run the Flex Template (corrected)
gcloud dataflow flex-template run bigquery-pipeline-tt \
    --template-file-gcs-location gs://vznet-test/wireline_churn_test/src/template.json \
    --project vz-it-np-gudv-dev-vzntdo-0 \
    --region us-east4 \
    --parameters query="SELECT * FROM vz-it-np-gudv-dev-vzntdo-0.vzn_nsdl_common_core_tbls.echo_ticket_opened_proc_v0 LIMIT 10" \
    --parameters gcs_folder_path=gs://vznet-test/wireline_churn_test/tmp/ \
    --num-workers 2 \
    --max-workers 2 \
    --worker-machine-type n2-standard-2 \
    --disable-public-ips \
    --network shared-np-east \
    --subnetwork https://www.googleapis.com/compute/v1/projects/vz-it-np-exhv-sharedvpc-228116/regions/us-east4/subnetworks/shared-np-east-green-subnet-2 \
    --temp-location gs://vznet-test/wireline_churn_test/tmp/ \
    --dataflow-kms-key projects/vz-it-np-d0sv-vsadkms-0/locations/us-east4/keyRings/vz-it-np-kr-aid/cryptoKeys/vz-it-np-kms-gudv \
    --parameters service-account-email=sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com \
    --service-account-email sa-dev-gudv-app-vzntdo-0@vz-it-np-gudv-dev-vzntdo-0.iam.gserviceaccount.com




FROM gcr.io/dataflow-templates-base/python39-template-launcher-base

# Set working directory
WORKDIR /template

# Install additional system dependencies if needed
RUN apt-get update && apt-get install -y \
    build-essential \
    libffi-dev \
    libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt /template/requirements.txt

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /template/requirements.txt

# Copy pipeline code
COPY pipeline.py /template/pipeline.py
RUN cat /template/pipeline.py

# Set required environment variables
ENV FLEX_TEMPLATE_PYTHON_PY_FILE="/template/pipeline.py"
ENV FLEX_TEMPLATE_PYTHON_REQUIREMENTS_FILE="/template/requirements.txt"
ENV FLEX_TEMPLATE_PYTHON_SETUP_FILE=""
ENV FLEX_TEMPLATE_PYTHON_OPTIONS="--runner=DataflowRunner"
